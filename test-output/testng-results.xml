<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="55" started-at="2019-06-06T09:50:15Z" finished-at="2019-06-06T09:50:15Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="55" started-at="2019-06-06T09:50:15Z" finished-at="2019-06-06T09:50:15Z">
      <class name="testngpac.NewTest">
        <test-method status="PASS" signature="f()[pri:0, instance:testngpac.NewTest@282ba1e]" name="f" duration-ms="2" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- testngpac.NewTest -->
      <class name="testngpac.TEST4">
        <test-method status="PASS" signature="enter()[pri:0, instance:testngpac.TEST4@50cbc42f]" name="enter" duration-ms="9" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enter -->
      </class> <!-- testngpac.TEST4 -->
      <class name="testngpac.test2">
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String)[pri:0, instance:testngpac.test2@1c53fd30]" name="f" duration-ms="5" started-at="2019-06-06T15:20:15Z" data-provider="signin" finished-at="2019-06-06T15:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[priya]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sandy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="f(java.lang.String, java.lang.String)[pri:0, instance:testngpac.test2@1c53fd30]" name="f" duration-ms="1" started-at="2019-06-06T15:20:15Z" data-provider="signin" finished-at="2019-06-06T15:20:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nivas]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nivi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- testngpac.test2 -->
      <class name="testngpac.test">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:testngpac.test@5f150435]" name="beforeTest" is-config="true" duration-ms="11" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="login()[pri:1, instance:testngpac.test@5f150435]" name="login" duration-ms="2" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:testngpac.test@5f150435]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:testngpac.test@5f150435]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:testngpac.test@5f150435]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:testngpac.test@5f150435]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:testngpac.test@5f150435]" name="afterTest" is-config="true" duration-ms="1" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testngpac.test -->
      <class name="testngpac.test3">
        <test-method status="FAIL" signature="login()[pri:0, instance:testngpac.test3@75412c2f]" name="login" duration-ms="2" started-at="2019-06-06T15:20:15Z" finished-at="2019-06-06T15:20:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [hello baby] but found [Hello baby]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [hello baby] but found [Hello baby]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at testngpac.test3.login(test3.java:10)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
      </class> <!-- testngpac.test3 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
